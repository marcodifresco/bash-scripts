#!/bin/bash
# General setup
export CONCURRENCY_LEVEL=33
export CCACHE_DISABLE=1


# Generating CPU microcode
vendor=$(lscpu | awk '/Vendor ID/{print $3}') ; if [[ "$vendor" == "GenuineIntel" ]]; then
echo "Generating new Intel microcode cpio"
rm /boot/early_ucode.cpio
/usr/sbin/iucode_tool -S --write-earlyfw=/boot/early_ucode.cpio /lib/firmware/intel-ucode/*
vendorcompile=intel
else
echo "Generating new AMD microcode cpio"
rm /boot/amd-uc.img
cat /lib/firmware/amd-ucode/microcode_amd*.bin > /root/AuthenticAMD.bin
echo /root/AuthenticAMD.bin | bsdcpio -o -H newc -R 0:0 > /boot/amd-uc.img
rm /root/AuthenticAMD.bin
vendorcompile=amd
fi


# If it is a new kernel version, get a copy of the current usable config
echo "Checking if the .config file already exist"
if [ ! -f /usr/src/linux/.config ]; then cp /etc/kernels/kernel-config-$(uname -r) /usr/src/linux/.config ; fi


# Actual kernel compilation and installation
echo "Compiling the kernel"
cd /usr/src/linux
genkernel --oldconfig --menuconfig --save-config --install --microcode=$vendorcompile --bootloader=grub2 all


# Recompile external kernel modules
#echo "Recompiling the kernel external modules"
#emerge @module-rebuild


# Remove old kernels (keep the above one and the now penultimate)
echo "Removing old kernels from /boot"
eclean-kernel -n 2 -d

